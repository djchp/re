### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Follow {
  followId: Int!
  followedAt: DateTime!
  id: Int!
  target: String!
  user: User
}

type LikedTweet {
  id: Int!
  likedAt: DateTime!
  tweet: Tweet
  user: User
}

type Mutation {
  createProfile(description: String, photo: String, profileSite: String): Profile
  createReply(body: String, tweetId: Int): Reply
  createReplyToReply(body: String, replyId: Int): Reply
  createTweet(body: String): Tweet
  dislikeTweet(id: Int): LikedTweet
  follow(followId: Int, target: String): Follow
  likeTweet(id: Int): LikedTweet
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String, password: String!): AuthPayload
  updateProfile(description: String, id: Int, photo: String, profileSite: String): Profile
}

type Profile {
  User: User
  createdAt: DateTime!
  description: String
  id: Int!
  photo: String
  profileSite: String
}

type Query {
  allUsers: [User!]!
  me: User
  trendingtweets: [Tweet]
  tweet(id: Int): Tweet
  tweets: [Tweet]
  tweetsbyuser(id: Int): [Tweet]
  tweetslikedbyuser(id: Int): [LikedTweet]
  user(profileName: String): User
  users: [User]
  userstofollow: [User]
}

type Reply {
  body: String
  createdAt: DateTime!
  id: Int!
  replies: [Reply]
  tweet: Tweet
  user: User
}

enum SortOrder {
  asc
  desc
}

type Tweet {
  author: User
  body: String
  createdAt: DateTime!
  id: Int!
  likes: [LikedTweet]
  replies: [Reply]
}

type User {
  Profile: Profile
  email: String!
  id: Int!
  likedTweets: [LikedTweet]
  name: String
  replies: [Reply]
  tweets: [Tweet]
}

input UserUniqueInput {
  email: String
  id: Int
}